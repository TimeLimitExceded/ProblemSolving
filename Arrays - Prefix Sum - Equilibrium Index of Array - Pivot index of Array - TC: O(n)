public class Solution
{
    int getEqulibriumIndex( int []A )
    {
        // Prefix Sum Array
        int n = A.length;
        int prefixSum[] = new int[n];
        prefixSum[0]=A[0];
        for ( int i = 1 ; i<n ; i++ )
        {
            prefixSum[i]= prefixSum[i-1]+A[i];
        }

        /* Calculate left and right sum array and at which Index they match

               -------------
               --->Left Sum:
               -------------
               leftSum(0, i-1). We already have a prefix sum array
               => leftSum =  prefixSum[i-1]
               --------------
               --->Right Sum:
               --------------
               rightSum(i+1, n-1). We already have a prefix sum array
               => rightSum = prefixSum[n-1]-prefixSum[i+1-1]
                           = prefixSum[n-1]-prefixSum[i];
        */
        int leftSum = 0, rightSum = 0;
        for ( int i = 0 ; i<n ; i++ )
        {
            if ( i == 0 )
            {
                leftSum = 0;  // A[4]=[0, 1, -3, 2]: leftSum = 0 and rightSum = 0 at index 0
            }
            else
            {
                leftSum = prefixSum[i - 1];
            }
            rightSum = prefixSum[n - 1] - prefixSum[i];
            if (leftSum == rightSum)
            {
                return i;
            }
        }
        return -1;
    }
}

// ************* Main Method ***************

public class Main
{
    public static void main(String[] args)
    {
        int nums[] = {2, 1, -3, 0};
        Solution sol = new Solution();
        int ans = sol.getEqulibriumIndex(nums);
        if ( ans < 0 )
        {
            System.out.println("No Equilibrium Index is Found");
        }
        else
        {
            System.out.println("Equilibrium Index is : "+ ans);
        }
    }
}


